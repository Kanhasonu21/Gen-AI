<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Sign Up - AI Assistant' %></title>
    <link rel="stylesheet" href="/signup.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="/utils/auth.js"></script>
    <script src="/utils/emailDisplay.js"></script>
</head>
<body>
    <div class="signup-container">
        <!-- Background Animation -->
        <div class="background-animation">
            <div class="floating-shape shape-1"></div>
            <div class="floating-shape shape-2"></div>
            <div class="floating-shape shape-3"></div>
            <div class="floating-shape shape-4"></div>
            <div class="floating-shape shape-5"></div>
        </div>

        <!-- Signup Card -->
        <div class="signup-card">
            <div class="signup-header">
                <div class="logo">
                    <div class="logo-icon">ü§ñ</div>
                </div>
                <p class="subtitle">Create your AI Assistant account to get started.</p>
            </div>

            <form class="signup-form" id="signupForm" action="/auth/signup" method="POST">
                <div class="form-row">
                    <div class="form-group">
                        <label for="firstName" class="form-label">First Name</label>
                        <div class="input-wrapper">
                            <span class="input-icon">üë§</span>
                            <input 
                                type="text" 
                                id="firstName" 
                                name="firstName" 
                                class="form-input" 
                                placeholder="Enter your first name"
                                required
                            >
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="lastName" class="form-label">Last Name</label>
                        <div class="input-wrapper">
                            <span class="input-icon">üë§</span>
                            <input 
                                type="text" 
                                id="lastName" 
                                name="lastName" 
                                class="form-input" 
                                placeholder="Enter your last name"
                                required
                            >
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="email" class="form-label">Email Address</label>
                    <div class="input-wrapper">
                        <span class="input-icon">üìß</span>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            class="form-input" 
                            placeholder="Enter your email"
                            required
                        >
                    </div>
                </div>

                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <div class="input-wrapper">
                        <span class="input-icon">üîí</span>
                        <input 
                            type="password" 
                            id="password" 
                            name="password" 
                            class="form-input" 
                            placeholder="Create a password"
                            required
                            minlength="8"
                        >
                        <button type="button" class="toggle-password" onclick="togglePassword('password')">
                            <span id="toggleIcon1">üëÅÔ∏è</span>
                        </button>
                    </div>
                    <div class="password-strength" id="passwordStrength"></div>
                </div>

                <div class="form-group">
                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                    <div class="input-wrapper">
                        <span class="input-icon">üîí</span>
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            class="form-input" 
                            placeholder="Confirm your password"
                            required
                        >
                        <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword')">
                            <span id="toggleIcon2">üëÅÔ∏è</span>
                        </button>
                    </div>
                    <div class="password-match" id="passwordMatch"></div>
                </div>

                <div class="form-options">
                    <label class="checkbox-container">
                        <input type="checkbox" name="terms" id="terms" required>
                        <span class="checkmark"></span>
                        <span class="checkbox-text">I agree to the <a href="/terms" class="terms-link">Terms of Service</a> and <a href="/privacy" class="terms-link">Privacy Policy</a></span>
                    </label>
                </div>

                <button type="submit" class="signup-btn" id="signupBtn">
                    <span class="btn-text">Create Account</span>
                    <span class="btn-loader" id="btnLoader">
                        <div class="spinner"></div>
                    </span>
                </button>

                <div class="login-link">
                    <p>Already have an account? <a href="/login">Sign in</a></p>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Toggle password visibility
        function togglePassword(fieldId) {
            const passwordInput = document.getElementById(fieldId);
            const toggleIcon = document.getElementById(fieldId === 'password' ? 'toggleIcon1' : 'toggleIcon2');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.textContent = 'üôà';
            } else {
                passwordInput.type = 'password';
                toggleIcon.textContent = 'üëÅÔ∏è';
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            const strength = document.getElementById('passwordStrength');
            let score = 0;
            let feedback = [];

            if (password.length >= 8) score++;
            else feedback.push('At least 8 characters');

            if (/[a-z]/.test(password)) score++;
            else feedback.push('Lowercase letter');

            if (/[A-Z]/.test(password)) score++;
            else feedback.push('Uppercase letter');

            if (/[0-9]/.test(password)) score++;
            else feedback.push('Number');

            if (/[^A-Za-z0-9]/.test(password)) score++;
            else feedback.push('Special character');

            const levels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const colors = ['#ff4757', '#ff6b7a', '#ffa726', '#66bb6a', '#43766C'];
            
            if (password.length > 0) {
                strength.innerHTML = `
                    <div class="strength-bar">
                        <div class="strength-fill" style="width: ${(score/5)*100}%; background-color: ${colors[score-1] || colors[0]}"></div>
                    </div>
                    <span class="strength-text" style="color: ${colors[score-1] || colors[0]}">${levels[score-1] || levels[0]}</span>
                `;
            } else {
                strength.innerHTML = '';
            }
        }

        // Password match checker
        function checkPasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const matchDiv = document.getElementById('passwordMatch');

            if (confirmPassword.length > 0) {
                if (password === confirmPassword) {
                    matchDiv.innerHTML = '<span class="match-success">‚úì Passwords match</span>';
                } else {
                    matchDiv.innerHTML = '<span class="match-error">‚úó Passwords do not match</span>';
                }
            } else {
                matchDiv.innerHTML = '';
            }
        }

        // Form validation and submission
        document.getElementById('signupForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (password !== confirmPassword) {
                showAlert('Passwords do not match!', 'error');
                return;
            }
            
            const signupBtn = document.getElementById('signupBtn');
            const btnText = signupBtn.querySelector('.btn-text');
            const btnLoader = document.getElementById('btnLoader');
            
            // Show loading state
            signupBtn.classList.add('loading');
            btnText.style.opacity = '0';
            btnLoader.style.display = 'block';
            
            try {
                // Get form data
                const formData = new FormData(this);
                const data = Object.fromEntries(formData);
                
                // Submit to server
                const response = await fetch('/auth/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Store JWT token in localStorage using AuthUtils
                    if (result.token) {
                        AuthUtils.setAuthData(result.token, result.user);
                        
                        showAlert('Account created successfully! Redirecting to chat...', 'success');
                        setTimeout(() => {
                            window.location.href = '/chat';
                        }, 2000);
                    } else {
                        showAlert('Account created successfully! Redirecting to login...', 'success');
                        setTimeout(() => {
                            window.location.href = '/login';
                        }, 2000);
                    }
                } else {
                    showAlert(result.message || 'Signup failed. Please try again.', 'error');
                }
                
            } catch (error) {
                console.error('Signup error:', error);
                showAlert('Network error. Please try again.', 'error');
            } finally {
                // Reset loading state
                signupBtn.classList.remove('loading');
                btnText.style.opacity = '1';
                btnLoader.style.display = 'none';
            }
        });

        // Alert function for user feedback
        function showAlert(message, type = 'info') {
            // Remove existing alerts
            const existingAlert = document.querySelector('.alert');
            if (existingAlert) {
                existingAlert.remove();
            }
            
            // Create alert element
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.innerHTML = `
                <span class="alert-message">${message}</span>
                <button class="alert-close" onclick="this.parentElement.remove()">√ó</button>
            `;
            
            // Insert at top of form
            const form = document.getElementById('signupForm');
            form.insertBefore(alert, form.firstChild);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (alert.parentElement) {
                    alert.remove();
                }
            }, 5000);
        }

        // Input focus animations and validation
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });
            
            input.addEventListener('blur', function() {
                if (!this.value) {
                    this.parentElement.classList.remove('focused');
                }
            });

            // Real-time validation
            if (input.id === 'password') {
                input.addEventListener('input', function() {
                    checkPasswordStrength(this.value);
                    checkPasswordMatch();
                });
            }

            if (input.id === 'confirmPassword') {
                input.addEventListener('input', checkPasswordMatch);
            }
        });

        // Animate elements on page load
        window.addEventListener('load', function() {
            document.querySelector('.signup-card').classList.add('animate-in');
        });
    </script>
</body>
</html>
